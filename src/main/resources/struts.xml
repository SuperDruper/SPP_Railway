<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>

    <constant name="struts.enable.DynamicMethodInvocation" value="false"/>
    <constant name="struts.devMode" value="true"/>
    <constant name="struts.convention.default.parent.package" value="angularstruts"/>

    <constant name="struts.mapper.class" value="org.apache.struts2.dispatcher.mapper.Restful2ActionMapper" />

    <constant name="struts.enable.SlashesInActionNames" value="true" />
    <constant name="struts.mapper.alwaysSelectFullNamespace" value="false" />


    <package name="def" extends="struts-default, json-default">
        <default-interceptor-ref name="defaultStack"></default-interceptor-ref>
        <default-action-ref name="index"/>

        <action name="index" class="code.controller.IndexAction">
            <result name="success">/index.jsp</result>
        </action>
    </package>


    <package name="api" extends="def" namespace="/api">

        <!-- GET EXAMPLE -->
        <action name="user/list" class="code.controller.user.UserListShowingAction">
            <interceptor-ref name="json" />

            <result type="json">
                <param name="excludeProperties">
                    <!--
                     In action class above there is filed users. Users is list of class User
                     and in User there is Collection named tickets/ You should know that everything that is
                     in Action class serialized in JSON and will be returned in response.
                     But we don't want return and users and tickets list of every user (we don't want to do it
                     in general, and moreover because it throws exception, because Hibernate try
                     to perform lazy loading, and it can't do it, because Session object is already closed).
                     So that is why using this regexp we exclude tickets from serialization.
                     With User.Role.Users situation is the same.-->
                    ^users\[\d+\]\.tickets,
                    ^users\[\d+\]\.role\.users
                </param>
                <param name="noCache">true</param>
            </result>
        </action>

        <!-- POST EXAMPLE -->
        <action name="user/register" class="code.controller.user.RegisterAction">
            <interceptor-ref name="json"></interceptor-ref>

            <result type="json">
                <param name="excludeProperties" >
                    ^user
                </param>
                <param name="noCache">true</param>
            </result>
        </action>


        <action name="user/login" class="code.controller.user.LoginAction">
            <interceptor-ref name="json">
            </interceptor-ref>

            <result type="json">
                <param name="excludeProperties" >
                    ^login,
                    ^password
                </param>
                <param name="noCache">true</param>
            </result>
        </action>
    </package>

</struts>